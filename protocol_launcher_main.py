import customtkinter as ctk
from tkinter import messagebox
from nagrev_gpt import show_input_form as show_nagrev_protocol
from liquid import show_input_form as show_liquid_protocol
from film_manager import add_film_window, delete_film_window, import_from_excel, edit_film_window

import sys
import os

# =============== –ü–ê–¢–ß –î–õ–Ø –ü–ï–†–ï–•–í–ê–¢–ê AFTER ===============
_all_after_ids = set()
_original_after = None
_original_after_cancel = None

def patched_after(self, ms, func=None, *args):
    """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º after, —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –æ—Ç–º–µ–Ω—ã"""
    if func is None:
        after_id = _original_after(self, ms)
    else:
        after_id = _original_after(self, ms, func, *args)
    _all_after_ids.add(after_id)
    return after_id

def patched_after_cancel(self, after_id):
    """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º after_cancel, —É–¥–∞–ª—è–µ–º ID –∏–∑ —Å–ø–∏—Å–∫–∞"""
    if after_id in _all_after_ids:
        _all_after_ids.remove(after_id)
    return _original_after_cancel(self, after_id)

def cancel_all_remaining_after():
    """–û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ after-–∑–∞–¥–∞—á–∏ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º"""
    for after_id in list(_all_after_ids):
        try:
            root.after_cancel(after_id)
        except:
            pass
    _all_after_ids.clear()
# =======================================================

PROTOCOLS = {
    "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –Ω–∞–≥—Ä–µ–≤—É": show_nagrev_protocol,
    "–ü—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –∂–∏–¥–∫–æ—Å—Ç–µ–π": show_liquid_protocol,
}

def launch_selected_protocol():
    selected = combo.get()
    if selected not in PROTOCOLS:
        messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª")
        return
    root.destroy()
    PROTOCOLS[selected]()

def launch_add_film():
    add_film_window()

def launch_delete_film():
    delete_film_window()

def launch_import_from_excel():
    import_from_excel()

def launch_edit_film():
    edit_film_window()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
ctk.set_appearance_mode("light")
ctk.set_default_color_theme("blue")

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
root = ctk.CTk()
root.title("–í—ã–±–æ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞")
root.geometry("400x350")

# === üî• –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–ï –ü–ï–†–ï–î–ê–Å–ú ROOT –í–†–£–ß–ù–£–Æ! ===
_original_after = root.after
_original_after_cancel = root.after_cancel

# ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: self –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ root.after(...)
root.after = lambda *args: patched_after(*args)
root.after_cancel = lambda after_id: patched_after_cancel(*args)  # ‚Üê —Ç–æ–∂–µ –±–µ–∑ root!

# =========================================================

# –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
lbl = ctk.CTkLabel(root, text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞", font=("Arial", 12))
lbl.pack(pady=10)

combo = ctk.CTkComboBox(root, values=list(PROTOCOLS.keys()), width=280)
combo.set("–ü—Ä–æ—Ç–æ–∫–æ–ª –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –Ω–∞–≥—Ä–µ–≤—É")
combo.pack(pady=5)

btn_launch = ctk.CTkButton(
    root,
    text="–ó–∞–ø—É—Å—Ç–∏—Ç—å",
    command=launch_selected_protocol,
    width=200,
    fg_color="green",
    hover_color="darkgreen"
)
btn_launch.pack(pady=10)

btn_add = ctk.CTkButton(
    root,
    text="–î–æ–±–∞–≤–∏—Ç—å –ø–ª—ë–Ω–∫—É",
    command=launch_add_film,
    width=200,
    fg_color="blue",
    hover_color="darkblue"
)
btn_add.pack(pady=5)

btn_delete = ctk.CTkButton(
    root,
    text="–£–¥–∞–ª–∏—Ç—å –ø–ª—ë–Ω–∫—É",
    command=launch_delete_film,
    width=200,
    fg_color="red",
    hover_color="darkred"
)
btn_delete.pack(pady=5)

btn_import = ctk.CTkButton(
    root,
    text="–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ Excel",
    command=launch_import_from_excel,
    width=200,
    fg_color="gray",
    hover_color="darkgray"
)
btn_import.pack(pady=5)

btn_edit = ctk.CTkButton(
    root,
    text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª—ë–Ω–∫—É",
    command=launch_edit_film,
    width=200,
    fg_color="yellow",
    hover_color="yellow",
    text_color="black"
)
btn_edit.pack(pady=5)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
def on_closing():
    cancel_all_remaining_after()
    root.quit()
    root.destroy()

root.protocol("WM_DELETE_WINDOW", on_closing)

# –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞
try:
    root.mainloop()
except Exception as e:
    error_str = str(e)
    if ("invalid command name" in error_str and
        any(keyword in error_str for keyword in ["after", "update", "click", "dpi", "animation"])):
        pass
    else:
        import traceback
        traceback.print_exc()